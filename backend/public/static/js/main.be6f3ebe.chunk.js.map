{"version":3,"sources":["components/appBar/AppBar.js","pages/home/Home.js","API/user/index.js","pages/completeSignup/CompleteSignup.js","components/userProfile/UserProfile.js","components/applicationCard/ApplicationCard.js","API/application/index.js","components/projectCard/ProjectCard.js","API/project/index.js","components/myProjects/MyProjects.js","components/myApplications/MyApplications.js","pages/dashboard/Dashboard.js","components/searchCard/SearchCard.js","pages/projectSearch/ProjectSearch.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["logOutUser","localStorage","removeItem","window","location","href","AppBar","globalUserData","React","useContext","GlobalUserContext","console","log","className","to","useLocation","pathname","user_type","Button","style","width","padding","size","variant","startIcon","onClick","color","HomePage","useHistory","push","addUser","new_user_data","a","token","getItem","axios","post","headers","authorization","response","data","status","error","getCurrentUserData","get","updateUser","updated_data","skillString","put","CompleteSignupPage","useState","username","phone_number","resume_url","skills","formData","setFormData","isLoading","setLoading","alert","length","TextField","fullWidth","value","id","label","onChange","e","target","trim","toLowerCase","helperText","split","map","skill","filter","Boolean","CircularProgress","UserProfile","setGlobalUserData","firebase_uid","display_name","display_picture","email","fcm_device_tokens","userData","setUserData","updatedData","setUpdatedData","useEffect","getData","open","setOpen","handleClose","handleEditFormSubmit","success","display","alt","src","join","Stack","direction","spacing","toUpperCase","slice","Dialog","onClose","maxWidth","DialogTitle","DialogContent","DialogContentText","margin","type","DialogActions","ApplicationCard","applicationData","setStatus","author","Date","createdAt","toLocaleString","Chip","cover_letter","application_status","_id","addApplication","new_application_data","getUserApplications","updateApplicationStatus","application_id","updated_status","Transition","forwardRef","props","ref","Slide","sortByTime","b","ProjectCard","projectData","projectList","setProjectList","isOwner","appModalOpen","setAppModalOpen","handleAppModalClose","setStatus_appCard","currentProject","find","p","currentProjectIndex","findIndex","allProjects","currentApplicationIndex","applications","title","IconButton","toDateString","tags","tag","description","skills_required","fullScreen","TransitionComponent","sx","position","Toolbar","edge","Typography","ml","flex","component","sort","app","addProject","new_project_data","getUserProjects","MyProjects","BLACK_PROJECT_STATE","address","address_line_1","address_line_2","city","city_zip","tagsString","addModalOpen","setAddModalOpen","modalData","setModalData","handleAddFormSubmit","newProject","projects","fetchData","Fab","autoFocus","multiline","rows","tagString","MyApplications","applicationList","setApplicationList","projects_applied_to","project","application","index","Dashboard","HOME_PAGE_URL","process","WEB_URL","SearchCard","applied","handleFormSubmit","objectID","updatedProjectList","includes","disableRipple","minWidth","searchClient","algoliasearch","Hit","hit","ProjectSearch","InstantSearch","indexName","SearchBox","focusShortcuts","defaultRefinement","Hits","hitComponent","appTheme","createTheme","palette","primary","light","main","dark","contrastText","secondary","createContext","App","Provider","ThemeProvider","theme","exact","path","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.be6f3ebe.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport Button from '@mui/material/Button';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { GlobalUserContext } from '../../App'\r\n\r\n\r\nimport './style.scss'\r\n\r\nfunction logOutUser() {\r\n    localStorage.removeItem('idToken')\r\n    window.location.href = '/'\r\n}\r\n\r\nfunction AppBar() {\r\n    let { globalUserData } = React.useContext(GlobalUserContext)\r\n    console.log()\r\n    return (\r\n        <div className=\"app-nav-wrapper\">\r\n            <div>\r\n                <Link to=\"dashboard\">\r\n                    CONVERGE\r\n                </Link>\r\n            </div>\r\n            <div className=\"--margin-right\">\r\n                {\r\n                    useLocation().pathname !== '/search-projects' && globalUserData.user_type && globalUserData.user_type === 'applicant' &&\r\n                    <Link to=\"search-projects\">\r\n                        <Button style={{ width: '300px', padding: '8px 0px' }} size=\"small\" variant=\"outlined\" startIcon={<SearchIcon />}> Search projects</Button>\r\n                    </Link>\r\n                }\r\n                {\r\n                    useLocation().pathname !== '/dashboard' &&\r\n                    <Link to=\"dashboard\">\r\n                        <Button>Return to dashboard</Button>\r\n                    </Link>\r\n                }\r\n            </div>\r\n            <div>\r\n                <Button onClick={logOutUser} size=\"small\" color=\"error\" variant=\"text\" startIcon={<LogoutIcon />}> logout</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppBar\r\n","import React from 'react'\r\nimport {\r\n    // BrowserRouter as Router,\r\n    // Link,\r\n    useHistory,\r\n    useLocation\r\n  } from \"react-router-dom\";\r\n\r\nfunction HomePage() {\r\n  const history = useHistory();\r\n  history.push('/dashboard')\r\n  \r\n  return (\r\n        <div>\r\n            Redirecting you to awesome...\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage\r\n","import axios from 'axios'\r\n\r\nexport var addUser = async (new_user_data) => {\r\n    let token = localStorage.getItem('idToken');\r\n    if (!token || token == null || token === 'null') {return}\r\n    try {\r\n        let response = await axios.post('/api/users/create', {\r\n            new_user_data\r\n        }, {\r\n            headers: {\r\n                authorization: 'Bearer ' + token\r\n            }\r\n        })\r\n\r\n        if (response.data.status === 'success') return [true, null]\r\n        else if (response.data.status === 'error') return [false, response.data.error]\r\n    } catch (error) {\r\n        console.log('[addUser]')\r\n        console.log(error.response.data.error)\r\n        return [false, error.response.data.error]\r\n    }\r\n}\r\n\r\nexport var getCurrentUserData = async () => {\r\n    let token = localStorage.getItem('idToken');\r\n// console.log({token})\r\n    if (!token || token == null || token === 'null') {return}\r\n    try {\r\n        let response = await axios.get('/api/users/doc/self', {\r\n            headers: {\r\n                authorization: 'Bearer ' + token\r\n            }\r\n        })\r\n\r\n        return response.data.data;\r\n    } catch (error) {\r\n        if (error.response.data.error === 'user/notFound') {\r\n            window.location.href = '/complete-signup'\r\n        }\r\n\r\n        console.log('[getCurrentUserData]')\r\n        console.log(error.response.data.error)\r\n    }\r\n}\r\n\r\nexport var getUserData = async () => {\r\n    try {\r\n\r\n    } catch (error) {\r\n        console.log('[getUserData]')\r\n    }\r\n}\r\n\r\nexport var updateUser = async (updated_data) => {\r\n    let token = localStorage.getItem('idToken');\r\n    if (!token || token == null || token === 'null') {return}\r\n    if(updated_data.skillString) updated_data.skillString = null\r\n    // console.log({updated_data})\r\n    // return [true, null]\r\n    try {\r\n        let response = await axios.put('/api/users/doc/self', {\r\n            updated_data\r\n        }, {\r\n            headers: {\r\n                authorization: 'Bearer ' + token\r\n            }\r\n        })\r\n\r\n        if (response.data.status === 'success') return [true, null]\r\n        else if (response.data.status === 'error') return [false, response.data.error]\r\n    } catch (error) {\r\n        if (error.response.data.error === 'user/notFound') {\r\n            window.location.href = '/complete-signup'\r\n        }\r\n\r\n        console.log('[updateUser]')\r\n        console.log(error.response.data.error)\r\n        return [false, error.response.data.error]\r\n    }\r\n}\r\n\r\nexport var deleteUser = async () => {\r\n    try {\r\n\r\n    } catch (error) {\r\n        console.log('[deleteUser]')\r\n    }\r\n}\r\n","import React, { useState } from 'react'\r\nimport './style.scss'\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\n// import {/\r\n\r\nimport { addUser } from '../../API/user';\r\n\r\nfunction CompleteSignupPage() {\r\n    let [formData, setFormData] = useState({\r\n        username: '',\r\n        phone_number: '',\r\n        resume_url: '',\r\n        skills: [],\r\n        user_type: 'applicant',\r\n    })\r\n\r\n    let [isLoading, setLoading] = useState(false)\r\n\r\n    async function handleSubmit() {\r\n        if(!formData.username) {\r\n            alert('Please enter a username.')\r\n            return\r\n        }\r\n        if(!formData.phone_number) {\r\n            alert('Please enter your contact number.')\r\n            return\r\n        }\r\n        if(formData.user_type === 'applicant' && formData.skills.length === 0) {\r\n            alert('Please add atleast one skill to continue.')\r\n            return\r\n        }\r\n        \r\n        setLoading(true)\r\n        // make api request\r\n        let [, error] = await addUser(formData)\r\n        if(error) {\r\n            alert(error)\r\n            setLoading(false)\r\n        } else {\r\n            window.location.href = '/dashboard'\r\n        }\r\n        console.log(formData)\r\n    }\r\n\r\n    return (\r\n        <div className=\"complete-signup-page__form__wrapper\">\r\n            <div className=\"p-12\">\r\n                <h2>One last step to get you started!</h2>\r\n                <br />\r\n                <TextField fullWidth value={formData.username} id=\"outlined-basic\"\r\n                    label=\"Username\" variant=\"outlined\" onChange={(e) => {\r\n                        setFormData({\r\n                            ...formData,\r\n                            username: e.target.value.trim().toLowerCase()\r\n                        })\r\n                    }} />\r\n                <br />\r\n                <br />\r\n                <TextField fullWidth value={formData.phone_number} id=\"outlined-basic\"\r\n                    label=\"Phone number\" variant=\"outlined\" onChange={(e) => {\r\n                        setFormData({\r\n                            ...formData,\r\n                            phone_number: e.target.value.trim()\r\n                        })\r\n                    }} />\r\n                <br/>\r\n                <br/>\r\n                <div className=\"__roles__wrapper\">\r\n                    <div className={[formData.user_type === 'applicant' && '--active']} onClick={() => {\r\n                        setFormData({\r\n                            ...formData,\r\n                            user_type: 'applicant',\r\n                        })\r\n                    }}>\r\n                        I am looking to join projects\r\n                    </div>\r\n                    <div className={[formData.user_type === 'recruiter' && '--active']} onClick={() => {\r\n                        setFormData({\r\n                            ...formData,\r\n                            user_type: 'recruiter',\r\n                        })\r\n                    }}>\r\n                        I am looking for team members\r\n                    </div>\r\n                </div>\r\n                {/* roles wrapper end */}\r\n                <br />\r\n                {\r\n                    formData.user_type === 'applicant' && <div>\r\n                        <h3>Add skills</h3>\r\n                        <br />\r\n                        Adding skills to your profile results in better project suggestions and increases your chances of being selected by a recruiter.\r\n                        <br />\r\n                        <br />\r\n                        <TextField fullWidth id=\"outlined-basic\" helperText=\"Enter a list of skills you want to add, separated by commas (,)\"\r\n                            label=\"My skills\" variant=\"outlined\" onChange={(e) => {\r\n                                setFormData({\r\n                                    ...formData,\r\n                                    skills: e.target.value.split(',').map(skill => skill.trim().toLowerCase()).filter(Boolean)\r\n                                })\r\n                            }} />\r\n                    </div>\r\n                }\r\n                <br />\r\n                {\r\n                    formData.user_type === 'applicant' && <div>\r\n                        <h3>Add resume</h3>\r\n                        <br />\r\n                        <TextField fullWidth id=\"outlined-basic\" helperText=\"Enter a link to your resume file, it will be used as your default resume.\"\r\n                            label=\"Resume URL\" variant=\"outlined\" onChange={(e) => {\r\n                                setFormData({\r\n                                    ...formData,\r\n                                    resume_url: e.target.value.trim()\r\n                                })\r\n                            }} />\r\n                    </div>\r\n                }\r\n                <br />\r\n                {\r\n                    isLoading ? \r\n                    <CircularProgress /> :\r\n                    <Button variant=\"contained\" onClick={handleSubmit}>Save and Continue</Button>\r\n                }\r\n            </div>\r\n            <div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CompleteSignupPage\r\n","import React, { useEffect, useState } from 'react'\r\nimport { getCurrentUserData, updateUser } from '../../API/user'\r\nimport { GlobalUserContext } from '../../App'\r\n// import Chip from '@mui/material/Chip';\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\n\r\n\r\nimport './style.scss'\r\n\r\n\r\nfunction UserProfile() {\r\n\r\n    let { globalUserData, setGlobalUserData } = React.useContext(GlobalUserContext)\r\n\r\n    let [userData, setUserData] = useState({\r\n        username: '',\r\n        firebase_uid: '',\r\n        display_name: '',\r\n        display_picture: '',\r\n        phone_number: '',\r\n        resume_url: '',\r\n        email: '',\r\n        skills: [],\r\n        fcm_device_tokens: [],\r\n    })\r\n\r\n    let [updatedData, setUpdatedData] = useState({\r\n        username: '',\r\n        display_name: '',\r\n        phone_number: '',\r\n        skills: [],\r\n        skillString: '',\r\n        resume_url: '',\r\n    })\r\n\r\n    useEffect(() => {\r\n        let getData = async () => {\r\n            let response = await getCurrentUserData()\r\n            setUserData(userData => ({ ...userData, ...response }))\r\n            setGlobalUserData(globalUserData => ({ ...globalUserData, ...response }))\r\n        }\r\n        getData()\r\n    }, [])\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setUpdatedData({\r\n            username: userData.username,\r\n            display_name: userData.display_name,\r\n            phone_number: userData.phone_number,\r\n            skills: [...userData.skills],\r\n            skillString: userData.skills.join(', '),\r\n            resume_url: userData.resume_url || '',\r\n        })\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setUpdatedData({\r\n            username: '',\r\n            display_name: '',\r\n            phone_number: '',\r\n            skills: [],\r\n            skillString: '',\r\n            resume_url: '',\r\n        })\r\n    };\r\n\r\n    const handleEditFormSubmit = async () => {\r\n        let [success, error] = await updateUser(updatedData);\r\n        if (success) {\r\n            setUserData({\r\n                ...userData, ...updatedData, skillString: null\r\n            })\r\n            setGlobalUserData({\r\n                ...globalUserData, ...updatedData, skillString: null\r\n            })\r\n            handleClose()\r\n        }\r\n        else {\r\n            alert(error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"user-profile__wrapper\" style={{ display: userData && userData.username.length ? 'block' : 'none' }}>\r\n            <div>\r\n                <img alt={userData.display_name} src={userData.display_picture} />\r\n                <div className=\"__edit-button\">\r\n                    <Button size=\"small\" variant=\"text\" style={{ color: '#ffffff' }} onClick={handleClickOpen}>edit profile</Button>\r\n                </div>\r\n\r\n                <div className=\"__name\">{userData.display_name}</div>\r\n                <div className=\"__type\">{userData.user_type}</div>\r\n            </div>\r\n            {userData.user_type === 'applicant' && <div>\r\n                <h3>Skills added</h3>\r\n                <Stack direction=\"column\" spacing={1}>\r\n                    {\r\n                        userData.skills.map(skill => <div className=\"__skill-chip\" key={skill}>{skill.toUpperCase()}</div>)\r\n                    }\r\n                </Stack>\r\n            </div>}\r\n            <div className=\"__contact-info-wrapper\">\r\n                <h3>Contact information</h3>\r\n                <div className=\"__username\"><i className=\"lni lni-user\"></i> @{userData.username}</div>\r\n                <div className=\"__email\"><i className=\"lni lni-envelope\"></i> {userData.email.length > 20 ? userData.email.slice(0, 17) + '...' : userData.email}</div>\r\n                <div className=\"__phone_number\"><i className=\"lni lni-phone\"></i> {userData.phone_number}</div>\r\n            </div>\r\n\r\n\r\n            {/* profile edit dialog */}\r\n            <Dialog open={open} onClose={handleClose} maxWidth=\"xs\" fullWidth>\r\n                {/* <Dialog open={open} onClose={handleClose} fullScreen> */}\r\n                <DialogTitle>Edit profile details</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Basic details\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        label=\"Name\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                        value={updatedData.display_name}\r\n                        onChange={(e) => {\r\n                            setUpdatedData({\r\n                                ...updatedData,\r\n                                display_name: e.target.value\r\n                            })\r\n                        }}\r\n                    />\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        label=\"Username\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                        value={updatedData.username}\r\n                        onChange={(e) => {\r\n                            setUpdatedData({\r\n                                ...updatedData,\r\n                                username: e.target.value\r\n                            })\r\n                        }}\r\n                    />\r\n                    {userData.user_type === 'applicant' && <TextField\r\n                        margin=\"dense\"\r\n                        label=\"Skills\"\r\n                        helperText=\"Enter skills separated by commas\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                        value={updatedData.skillString}\r\n                        onChange={(e) => {\r\n                            setUpdatedData({\r\n                                ...updatedData,\r\n                                skillString: e.target.value,\r\n                                skills: e.target.value.split(',').map(skill => skill.trim().toLowerCase()).filter(Boolean)\r\n                            })\r\n                        }}\r\n                    />}\r\n                    {userData.user_type === 'applicant' && <TextField\r\n                        margin=\"dense\"\r\n                        label=\"Skills\"\r\n                        helperText=\"Enter link to your resume\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                        value={updatedData.resume_url}\r\n                        onChange={(e) => {\r\n                            setUpdatedData({\r\n                                ...updatedData,\r\n                                resume_url: e.target.value,\r\n                            })\r\n                        }}\r\n                    />}\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <DialogContentText>\r\n                        Contact details\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        label=\"Contact number\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                        value={updatedData.phone_number}\r\n                        onChange={(e) => {\r\n                            setUpdatedData({\r\n                                ...updatedData,\r\n                                phone_number: e.target.value\r\n                            })\r\n                        }}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose}>Cancel</Button>\r\n                    <Button onClick={handleEditFormSubmit}>Update details</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserProfile\r\n","import React from 'react'\r\nimport Chip from '@mui/material/Chip';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\n\r\nimport InsertDriveFileOutlinedIcon from '@mui/icons-material/InsertDriveFileOutlined';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n\r\nimport './style.scss'\r\n\r\nfunction ApplicationCard({ applicationData, setStatus }) {\r\n    return (\r\n        <div className=\"app-card-wrapper box-shadow\">\r\n            <div className=\"__author-section\">\r\n                <img src={applicationData.author.display_picture || ''} alt=''></img>\r\n                <span>{applicationData.author.display_name}</span>\r\n                {/* <span className=\"__date\">{applicationData.application_status}</span> */}\r\n                <span className=\"__date\">{new Date(applicationData.createdAt).toLocaleString()}</span>\r\n            </div>\r\n            <div className=\"__skill-section\">\r\n                <strong>Skills: </strong>\r\n                <Stack className=\"__skills-section\" direction=\"row\" spacing={1}>\r\n                    {(applicationData.author.skills || []).map(skill => <Chip label={skill.toUpperCase()} color=\"primary\" variant=\"outlined\" />)}\r\n                </Stack>\r\n            </div>\r\n            {\r\n                applicationData.cover_letter && <div className=\"__cover-letter-section\">{applicationData.cover_letter}</div>\r\n            }\r\n            {\r\n                applicationData.resume_url && <a href={applicationData.resume_url} target=\"_blank\">\r\n                    <Button className=\"__resume-button\" fullWidth variant=\"outlined\" startIcon={<InsertDriveFileOutlinedIcon />}> Open resume</Button>\r\n                </a>\r\n            }\r\n            <h4>Contact information</h4>\r\n            <div>\r\n                <strong>Email address: </strong> {applicationData.author.email}\r\n            </div>\r\n            <div>\r\n                <strong>Contact: </strong> {applicationData.author.phone_number}\r\n            </div>\r\n            { applicationData.application_status === 'pending' &&\r\n            <div className=\"__buttons-section\">\r\n                <Button variant=\"outlined\" color=\"error\" startIcon={<ClearIcon />} onClick={()=>{setStatus(applicationData._id, 'rejected')}}>Reject application</Button>\r\n                <Button variant=\"contained\" color=\"primary\" startIcon={<CheckIcon />} onClick={()=>{setStatus(applicationData._id, 'accepted')}}>Accept application</Button>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ApplicationCard\r\n","import axios from 'axios'\r\n\r\nexport var addApplication = async (new_application_data) => {\r\n    let token = localStorage.getItem('idToken');\r\n    if (!token || token == null || token === 'null') { return {} }\r\n    try {\r\n        let response = await axios.post('/api/applications/create', {\r\n            new_application_data\r\n        }, {\r\n            headers: {\r\n                authorization: 'Bearer ' + token\r\n            }\r\n        })\r\n\r\n        if (response.data.status === 'success') {\r\n            // response.data.data.applications = [];\r\n            return [response.data.data, null]\r\n        }\r\n        else if (response.data.status === 'error') return [false, response.data.error]\r\n    } catch (error) {\r\n        console.log('[addApplication]')\r\n        console.log(error.response.data.error)\r\n        return [false, error.response.data.error]\r\n    }\r\n}\r\n\r\nexport var getUserApplications = async () => {\r\n    let token = localStorage.getItem('idToken');\r\n    // console.log({token})\r\n    if (!token || token == null || token === 'null') { return [] }\r\n    try {\r\n        let response = await axios.get('/api/applications/list/self', {\r\n            headers: {\r\n                authorization: 'Bearer ' + token\r\n            }\r\n        })\r\n\r\n        return response.data.data;\r\n    } catch (error) {\r\n        console.log('[getUserApplications]')\r\n        console.log(error.response.data.error)\r\n    }\r\n}\r\n\r\nexport var getApplicationData = async () => {\r\n    try {\r\n\r\n    } catch (error) {\r\n        console.log('[getApplicationData]')\r\n    }\r\n}\r\n\r\nexport var updateApplication = async (applicationId, updated_data) => {\r\n    let token = localStorage.getItem('idToken');\r\n    if (!token || token == null || token === 'null') { return {} }\r\n    if (updated_data.skillString) updated_data.skillString = null\r\n    // console.log({updated_data})\r\n    // return [true, null]\r\n    try {\r\n        let response = await axios.put('/api/applications/doc/' + applicationId, {\r\n            updated_data\r\n        }, {\r\n            headers: {\r\n                authorization: 'Bearer ' + token\r\n            }\r\n        })\r\n\r\n        if (response.data.status === 'success') return [true, null]\r\n        else if (response.data.status === 'error') return [false, response.data.error]\r\n    } catch (error) {\r\n\r\n        console.log('[updateApplication]')\r\n        console.log(error.response.data.error)\r\n        return [false, error.response.data.error]\r\n    }\r\n}\r\n\r\nexport var updateApplicationStatus = async (application_id, updated_status) => {\r\n    let token = localStorage.getItem('idToken');\r\n    if (!token || token == null || token === 'null') { return [false, 'Not logged in.'] }\r\n    try {\r\n        let response = await axios.put(`/api/applications/doc/${application_id}/status`, {\r\n            updated_status\r\n        }, {\r\n            headers: {\r\n                authorization: 'Bearer ' + token\r\n            }\r\n        })\r\n\r\n        if (response.data.status === 'success') {\r\n            // response.data.data.applications = [];\r\n            return [true, null]\r\n        }\r\n        else if (response.data.status === 'error') return [false, response.data.error]\r\n\r\n    } catch (error) {\r\n        console.log('[updateApplicationStatus]')\r\n        console.log(error.response.data.error)\r\n        return [false, error.response.data.error]\r\n    }\r\n}\r\n\r\nexport var deleteApplication = async () => {\r\n    try {\r\n\r\n    } catch (error) {\r\n        console.log('[deleteApplication]')\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\n// import DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\n// import DialogTitle from '@mui/material/DialogTitle';\r\nimport Button from '@mui/material/Button';\r\nimport Chip from '@mui/material/Chip';\r\nimport Stack from '@mui/material/Stack';\r\nimport Fab from '@mui/material/Fab';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport Slide from '@mui/material/Slide';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport ApplicationCard from '../applicationCard/ApplicationCard';\r\n\r\nimport './style.scss'\r\nimport { updateApplicationStatus } from '../../API/application';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst sortByTime = (a, b) => {\r\n    return a.createdAt - b.createdAt;\r\n}\r\n\r\nfunction ProjectCard({ projectData, projectList, setProjectList, isOwner }) {\r\n    let [appModalOpen, setAppModalOpen] = React.useState(false)\r\n    const handleAppModalOpen = () => {\r\n        setAppModalOpen(true);\r\n    };\r\n\r\n    const handleAppModalClose = () => {\r\n        // setModalData(BLACK_PROJECT_STATE)\r\n        setAppModalOpen(false);\r\n    };\r\n\r\n    const setStatus_appCard = async (application_id, status) => {\r\n        let [success, error] = await updateApplicationStatus(application_id, status)\r\n        if (!success) return;\r\n\r\n        let currentProject = { ...projectList.find(p => p._id === projectData._id) }// a copy of the current project object\r\n        if (!currentProject) return;\r\n        let currentProjectIndex = projectList.findIndex(p => p._id === projectData._id);\r\n        let allProjects = [...projectList]\r\n\r\n        let currentApplicationIndex = currentProject.applications.findIndex(a => a._id === application_id)\r\n        if (currentApplicationIndex === -1) return;\r\n\r\n        currentProject.applications[currentApplicationIndex].application_status = status;\r\n        allProjects[currentProjectIndex] = currentProject;\r\n        setProjectList(allProjects)\r\n    }\r\n    return (\r\n        <div className=\"project-card-wrapper box-shadow\">\r\n            <div className=\"__card-heading\">\r\n                <h3>{projectData.title}\r\n                    {isOwner && <IconButton className=\"__edit-button\" >\r\n                        {/* <EditIcon /> */}\r\n                    </IconButton>}\r\n                </h3>\r\n                <div>{new Date(projectData.createdAt).toDateString()}</div>\r\n            </div>\r\n\r\n            <Stack className=\"__tags-section\" direction=\"row\" spacing={1}>\r\n                {(projectData.tags || []).map(tag => <Chip label={tag.toUpperCase()} key={tag} color=\"primary\" variant=\"outlined\" />)}\r\n            </Stack>\r\n\r\n            {isOwner && <div className=\"__appliation-section\">\r\n                <div>{`${projectData.applications.length} application(s) received.`}</div>\r\n                {\r\n                    projectData.applications.length ?\r\n                        <div><Button onClick={handleAppModalOpen}>View applications</Button></div> : null\r\n                }\r\n            </div>}\r\n\r\n            <div className=\"__description-section\">{projectData.description}</div>\r\n            <div className=\"__skills-section\">\r\n                <strong>Skills required: </strong>\r\n                {projectData.skills_required.join(', ')}\r\n            </div>\r\n\r\n            {/* view applications dialog*/}\r\n            <Dialog open={appModalOpen} onClose={handleAppModalClose} maxWidth=\"s\" fullScreen TransitionComponent={Transition}>\r\n                <AppBar sx={{ position: 'relative' }}>\r\n                    <Toolbar>\r\n                        <IconButton\r\n                            edge=\"start\"\r\n                            color=\"inherit\"\r\n                            onClick={handleAppModalClose}\r\n                            aria-label=\"close\"\r\n                        >\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                        <Typography sx={{ ml: 2, flex: 1 }} variant=\"h6\" component=\"div\">\r\n                            All applications ({projectData.title})\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {(projectData.applications || []).filter(a => a.application_status === 'pending').length > 0 &&\r\n                            <h4 className=\"bordered-h4\">Pending applications</h4>}\r\n                        {\r\n                            (projectData.applications || [])\r\n                                .filter(a => a.application_status === 'pending')\r\n                                .sort(sortByTime)\r\n                                .map(app => <ApplicationCard key={app._id} applicationData={app} setStatus={setStatus_appCard} />)\r\n                        }\r\n\r\n                        {(projectData.applications || []).filter(a => a.application_status === 'accepted').length > 0 &&\r\n                            <h4 className=\"bordered-h4\">Accepted applications</h4>}\r\n                        {\r\n                            (projectData.applications || [])\r\n                                .filter(a => a.application_status === 'accepted')\r\n                                .sort(sortByTime)\r\n                                .map(app => <ApplicationCard key={app._id} applicationData={app} setStatus={setStatus_appCard} />)\r\n                        }\r\n\r\n                        {(projectData.applications || []).filter(a => a.application_status === 'rejected').length > 0 &&\r\n                            <h4 className=\"bordered-h4\">Rejected applications</h4>}\r\n                        {\r\n                            (projectData.applications || [])\r\n                                .filter(a => a.application_status === 'rejected')\r\n                                .sort(sortByTime)\r\n                                .map(app => <ApplicationCard key={app._id} applicationData={app} setStatus={setStatus_appCard} />)\r\n                        }\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectCard\r\n","import axios from 'axios'\r\n\r\nexport var addProject = async (new_project_data) => {\r\n    let token = localStorage.getItem('idToken');\r\n    if (!token || token == null || token === 'null') {return {}}\r\n    try {\r\n        let response = await axios.post('/api/projects/create', {\r\n            new_project_data\r\n        }, {\r\n            headers: {\r\n                authorization: 'Bearer ' + token\r\n            }\r\n        })\r\n\r\n        if (response.data.status === 'success') {\r\n            response.data.data.applications = [];\r\n            return [response.data.data, null]\r\n        }\r\n        else if (response.data.status === 'error') return [false, response.data.error]\r\n    } catch (error) {\r\n        console.log('[addProject]')\r\n        console.log(error.response.data.error)\r\n        return [false, error.response.data.error]\r\n    }\r\n}\r\n\r\nexport var getUserProjects = async () => {\r\n    let token = localStorage.getItem('idToken');\r\n// console.log({token})\r\n    if (!token || token == null || token === 'null') {return []}\r\n    try {\r\n        let response = await axios.get('/api/projects/list/self', {\r\n            headers: {\r\n                authorization: 'Bearer ' + token\r\n            } \r\n        })\r\n\r\n        return response.data.data;\r\n    } catch (error) {\r\n        console.log('[getUserProjects]')\r\n        console.log(error.response.data.error)\r\n    }\r\n}\r\n\r\nexport var getProjectData = async () => {\r\n    try {\r\n\r\n    } catch (error) {\r\n        console.log('[getProjectData]')\r\n    }\r\n}\r\n\r\nexport var updateProject = async (projectId, updated_data) => {\r\n    let token = localStorage.getItem('idToken');\r\n    if (!token || token == null || token === 'null') {return {}}\r\n    if(updated_data.skillString) updated_data.skillString = null\r\n    // console.log({updated_data})\r\n    // return [true, null]\r\n    try {\r\n        let response = await axios.put('/api/projects/doc/' + projectId, {\r\n            updated_data\r\n        }, {\r\n            headers: {\r\n                authorization: 'Bearer ' + token\r\n            }\r\n        })\r\n\r\n        if (response.data.status === 'success') return [true, null]\r\n        else if (response.data.status === 'error') return [false, response.data.error]\r\n    } catch (error) {\r\n  \r\n        console.log('[updateProject]')\r\n        console.log(error.response.data.error)\r\n        return [false, error.response.data.error]\r\n    }\r\n}\r\n\r\nexport var deleteProject = async () => {\r\n    try {\r\n\r\n    } catch (error) {\r\n        console.log('[deleteProject]')\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\n// import DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\n// import DialogTitle from '@mui/material/DialogTitle';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport Slide from '@mui/material/Slide';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nimport ProjectCard from '../projectCard/ProjectCard';\r\n\r\nimport './style.scss'\r\n\r\nimport { addProject, updateProject, getUserProjects } from '../../API/project';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction MyProjects() {\r\n    const BLACK_PROJECT_STATE = {\r\n        title: '',\r\n        description: '',\r\n        address: {\r\n            address_line_1: '',\r\n            address_line_2: '',\r\n            city: '',\r\n            city_zip: '',\r\n        },\r\n        tags: [],\r\n        skills_required: [],\r\n        tagsString: '',\r\n        skillString: ''\r\n    }\r\n\r\n    let [addModalOpen, setAddModalOpen] = React.useState(false);\r\n    let [projectList, setProjectList] = React.useState([])\r\n    let [modalData, setModalData] = React.useState(BLACK_PROJECT_STATE)\r\n\r\n    const handleClickOpen = () => {\r\n        setAddModalOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setModalData(BLACK_PROJECT_STATE)\r\n        setAddModalOpen(false);\r\n    };\r\n\r\n    const isValid = () => {\r\n        if(!modalData.title) {\r\n            alert('Please enter a title for the project.')\r\n            return false\r\n        }\r\n        \r\n        if((modalData.skills_required || []).length === 0) {\r\n            alert('Please add atleast one skill required for the project.')\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    const handleAddFormSubmit = async () => {\r\n        // setModalData({ ...modalData, skillString: '', tagString: '' })\r\n        try {\r\n            if(!isValid()) return;\r\n          \r\n            let [newProject, error] = await addProject(modalData)\r\n            if (error) throw error\r\n            else {\r\n                setProjectList([newProject, ...projectList])\r\n                setAddModalOpen(false);\r\n                setModalData(BLACK_PROJECT_STATE)\r\n            }\r\n        } catch (error) {\r\n            console.log('[MyProjects/handleAddFormSubmit]', error)\r\n            alert('Project could not be created because an error was encountered.')\r\n        }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                let projects = await getUserProjects()\r\n                // projects = [...projects, ...projects, ...projects]\r\n                setProjectList(projects || [])\r\n            } catch (error) {\r\n                console.log('[MyProjects/fetchProjects]', error)\r\n                // alert('Projects could not be fetched because an error was encountered.')\r\n            }\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"my-projects-wrapper\">\r\n            <div className=\"__fab-wrapper\">\r\n                {/* <Fab color=\"primary\" variant=\"extended\" aria-label=\"add\">\r\n                    <AddIcon sx={{ mr: 1 }} /> New project\r\n                </Fab> */}\r\n                <Fab color=\"primary\" aria-label=\"add\" onClick={handleClickOpen}>\r\n                    <AddIcon />\r\n                </Fab>\r\n            </div>\r\n\r\n            {/* project list */}\r\n            <div className=\"__project-list-wrapper\">\r\n                <div className=\"__heading-wrapper\">\r\n                    <h2>{`My Projects`}</h2>\r\n                </div>\r\n                {projectList.map(p => <ProjectCard projectData={p} projectList={projectList} setProjectList={setProjectList} isOwner />)}\r\n            </div>\r\n\r\n            {/* Add project dialog */}\r\n            {/* <Dialog open={addModalOpen} onClose={handleClose} maxWidth=\"s\"  > */}\r\n            <Dialog open={addModalOpen} onClose={handleClose} maxWidth=\"s\" fullScreen TransitionComponent={Transition}>\r\n                <AppBar sx={{ position: 'relative' }}>\r\n                    <Toolbar>\r\n                        <IconButton\r\n                            edge=\"start\"\r\n                            color=\"inherit\"\r\n                            onClick={handleClose}\r\n                            aria-label=\"close\"\r\n                        >\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                        <Typography sx={{ ml: 2, flex: 1 }} variant=\"h6\" component=\"div\">\r\n                            Add a new project\r\n                        </Typography>\r\n                        <Button autoFocus color=\"inherit\" onClick={handleAddFormSubmit}>\r\n                            Save\r\n                        </Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                {/* <DialogTitle>Add new project</DialogTitle> */}\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Basic details\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        label=\"Project title\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                        value={modalData.title}\r\n                        onChange={(e) => {\r\n                            setModalData({\r\n                                ...modalData,\r\n                                title: e.target.value\r\n                            })\r\n                        }}\r\n                    />\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        label=\"Description\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        multiline\r\n                        rows={4}\r\n                        variant=\"standard\"\r\n                        value={modalData.description}\r\n                        onChange={(e) => {\r\n                            setModalData({\r\n                                ...modalData,\r\n                                description: e.target.value\r\n                            })\r\n                        }}\r\n                    />\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        label=\"Skills required\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                        helperText=\"Enter a list of skills required by the candidate for working on this project, separated by commas (,)\"\r\n                        value={modalData.skillString}\r\n                        onChange={(e) => {\r\n                            setModalData({\r\n                                ...modalData,\r\n                                skillString: e.target.value,\r\n                                skills_required: e.target.value.split(',').map(skill => skill.trim().toLowerCase()).filter(Boolean)\r\n                            })\r\n                        }}\r\n                    />\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        label=\"Tags\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                        helperText=\"Enter a list of tags related to your project, separated by commas (,)\"\r\n                        value={modalData.tagString}\r\n                        onChange={(e) => {\r\n                            setModalData({\r\n                                ...modalData,\r\n                                tagString: e.target.value,\r\n                                tags: e.target.value.split(',').map(skill => skill.trim().toLowerCase()).filter(Boolean)\r\n                            })\r\n                        }}\r\n                    />\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <DialogContentText>\r\n                        Address details (Leave blank if virtual)\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        label=\"Address line 1\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                        value={modalData.address.address_line_1}\r\n                        onChange={(e) => {\r\n                            setModalData({\r\n                                ...modalData,\r\n                                address: { ...modalData.address, address_line_1: e.target.value }\r\n                            })\r\n                        }}\r\n                    />\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        label=\"Address line 2\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                        value={modalData.address.address_line_2}\r\n                        onChange={(e) => {\r\n                            setModalData({\r\n                                ...modalData,\r\n                                address: { ...modalData.address, address_line_2: e.target.value }\r\n                            })\r\n                        }}\r\n                    />\r\n                    <div className=\"flex-box gap-8\">\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            label=\"City\"\r\n                            type=\"text\"\r\n                            fullWidth\r\n                            variant=\"standard\"\r\n                            value={modalData.address.city}\r\n                            onChange={(e) => {\r\n                                setModalData({\r\n                                    ...modalData,\r\n                                    address: { ...modalData.address, city: e.target.value }\r\n                                })\r\n                            }}\r\n                        />\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            label=\"PIN code\"\r\n                            type=\"text\"\r\n                            fullWidth\r\n                            variant=\"standard\"\r\n                            value={modalData.address.city_zip}\r\n                            onChange={(e) => {\r\n                                setModalData({\r\n                                    ...modalData,\r\n                                    address: { ...modalData.address, city_zip: e.target.value }\r\n                                })\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyProjects\r\n","import React from 'react'\r\nimport { getUserApplications } from '../../API/application'\r\nimport ProjectCard from '../projectCard/ProjectCard'\r\nimport { Link } from 'react-router-dom'\r\nimport { GlobalUserContext } from '../../App'\r\n\r\n\r\nimport './style.scss'\r\n\r\nfunction MyApplications() {\r\n    let [applicationList, setApplicationList] = React.useState([])\r\n    let { globalUserData ,setGlobalUserData } = React.useContext(GlobalUserContext)\r\n\r\n\r\n    React.useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                let applications = await getUserApplications()\r\n                // applications = [...applications, ...applications, ...applications, ...applications, ...applications]\r\n                setApplicationList(applications || [])\r\n                setGlobalUserData({\r\n                    ...globalUserData,\r\n                    projects_applied_to: applications.map(app=>app.project._id || '') || []\r\n                })\r\n            } catch (error) {\r\n                console.log('[MyApplications/fetchApplications]', error)\r\n                // alert('Applications could not be fetched because an error was encountered.')\r\n            }\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"my-applications-wrapper\">\r\n            <h2>My Applications</h2>\r\n            {\r\n                applicationList.length <= 0 &&\r\n                <h4>\r\n                    {'No applications yet. Start applying by '}\r\n                    <Link to=\"search-projects\">searching for projects</Link>\r\n                    .\r\n                </h4>\r\n            }\r\n            {applicationList.filter(a => a.application_status === 'pending').length > 0 &&\r\n                <h4>Pending applications</h4>}\r\n            {applicationList.filter(a => a.application_status === 'pending').map((application, index) => {\r\n                return (\r\n                    <ProjectCard\r\n                        key={index}\r\n                        projectData={{ ...application.project, createdAt: application.createdAt }}\r\n                    />\r\n                )\r\n            })}\r\n\r\n            {applicationList.filter(a => a.application_status === 'accepted').length > 0 &&\r\n                <h4>Accepted applications</h4>}\r\n            {applicationList.filter(a => a.application_status === 'accepted').map((application, index) => {\r\n                return (\r\n                    <ProjectCard\r\n                        key={index}\r\n                        projectData={application.project}\r\n                    />\r\n                )\r\n            })}\r\n\r\n            {applicationList.filter(a => a.application_status === 'rejected').length > 0 &&\r\n                <h4>Rejected applications</h4>}\r\n            {applicationList.filter(a => a.application_status === 'rejected').map((application, index) => {\r\n                return (\r\n                    <ProjectCard\r\n                        key={index}\r\n                        projectData={application.project}\r\n                    />\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyApplications\r\n","import React from 'react'\r\nimport UserProfile from '../../components/userProfile/UserProfile'\r\nimport MyProjects from '../../components/myProjects/MyProjects'\r\nimport MyApplications from '../../components/myApplications/MyApplications'\r\nimport { GlobalUserContext } from '../../App'\r\n\r\nimport './style.scss'\r\nfunction Dashboard() {\r\n    let token = localStorage.getItem('idToken');\r\n  \r\n    // if not token, redirect to static home.\r\n    const HOME_PAGE_URL = (process.env.WEB_URL || 'http://localhost:5000') + '/landing'\r\n    if(!token) window.location = HOME_PAGE_URL\r\n    \r\n    let { globalUserData } = React.useContext(GlobalUserContext)\r\n    return (\r\n        <div className=\"dashboard__grid\">\r\n            {/* left panel */}\r\n            <div>\r\n            {\r\n                (globalUserData.user_type && globalUserData.user_type === 'recruiter')  && <MyProjects />\r\n            }\r\n            {\r\n                (globalUserData.user_type && globalUserData.user_type === 'applicant')  && <MyApplications />\r\n            }\r\n            </div>\r\n            {/* right panel */}\r\n            <div>\r\n                <UserProfile />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","import React from 'react'\r\nimport { GlobalUserContext } from '../../App';\r\n\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Button from '@mui/material/Button';\r\nimport Chip from '@mui/material/Chip';\r\nimport Stack from '@mui/material/Stack';\r\nimport Slide from '@mui/material/Slide';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n\r\nimport { addApplication } from '../../API/application';\r\n\r\nimport './style.scss'\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction SearchCard({ projectData }) {\r\n    let { globalUserData, setGlobalUserData } = React.useContext(GlobalUserContext)\r\n\r\n    let [appModalOpen, setAppModalOpen] = React.useState(false)\r\n    let [modalData, setModalData] = React.useState({\r\n        applied: false,\r\n        cover_letter: '',\r\n        resume_url: ''\r\n    })\r\n\r\n    const handleAppModalOpen = () => {\r\n        setModalData({\r\n            ...modalData,\r\n            resume_url: globalUserData.resume_url || '',\r\n        })\r\n        setAppModalOpen(true);\r\n    };\r\n\r\n    const handleAppModalClose = () => {\r\n        // setModalData(BLACK_PROJECT_STATE)\r\n        setAppModalOpen(false);\r\n    };\r\n    const handleFormSubmit = async () => {\r\n        // setModalData(BLACK_PROJECT_STATE)\r\n        try {\r\n\r\n            await addApplication({\r\n                project: projectData.objectID,\r\n                cover_letter: modalData.cover_letter,\r\n                resume_url: modalData.resume_url\r\n            })\r\n\r\n            let updatedProjectList = [...globalUserData.projects_applied_to, projectData.objectID]\r\n            setGlobalUserData({\r\n                ...globalUserData, \r\n                projects_applied_to: updatedProjectList\r\n            })\r\n            setAppModalOpen(false);\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"search-card-wrapper box-shadow\">\r\n            <div className=\"__card-heading\">\r\n                <h3>{projectData.title}</h3>\r\n            </div>\r\n\r\n            <Stack className=\"__tags-section\" direction=\"row\" spacing={1}>\r\n                {(projectData.tags || []).map(tag => <Chip label={tag.toUpperCase()} color=\"primary\" variant=\"outlined\" />)}\r\n            </Stack>\r\n\r\n\r\n            <div className=\"__description-section\">{projectData.description}</div>\r\n            <div className=\"__skills-section\">\r\n                <strong>Skills required: </strong>\r\n                {projectData.skills_required.join(', ')}\r\n            </div>\r\n\r\n            <br />\r\n            <div>\r\n                {globalUserData.projects_applied_to.includes(projectData.objectID) === false ? <Button onClick={handleAppModalOpen} variant=\"outlined\">Apply</Button>\r\n                    : <Button variant=\"outlined\" disableRipple color=\"success\" startIcon={<CheckIcon/>}>Already applied</Button>}\r\n            </div>\r\n\r\n\r\n            {/* view applications dialog*/}\r\n            <Dialog open={appModalOpen} onClose={handleAppModalClose} >\r\n\r\n                <DialogTitle style={{ width: '600px', minWidth: 'max-content', maxWidth: '80vw' }}>\r\n                    Apply for {projectData.title}\r\n                </DialogTitle>\r\n\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            label=\"Add a cover letter (optional)\"\r\n                            type=\"text\"\r\n                            fullWidth\r\n                            multiline\r\n                            rows={4}\r\n                            variant=\"standard\"\r\n                            value={modalData.title}\r\n                            onChange={(e) => {\r\n                                setModalData({\r\n                                    ...modalData,\r\n                                    cover_letter: e.target.value\r\n                                })\r\n                            }}\r\n                        />\r\n                        <br />\r\n                        <br />\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            label=\"Add a link to your resume for this application\"\r\n                            type=\"text\"\r\n                            fullWidth\r\n                            variant=\"standard\"\r\n                            value={modalData.resume_url}\r\n                            onChange={(e) => {\r\n                                setModalData({\r\n                                    ...modalData,\r\n                                    resume_url: e.target.value\r\n                                })\r\n                            }}\r\n                        />\r\n                    </DialogContentText>\r\n                    <br />\r\n                    <br />\r\n                    <DialogContentText>\r\n                        Your skillset and profile will also be shared with the recruiter.\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleAppModalClose}>Cancel</Button>\r\n                    <Button onClick={handleFormSubmit}>Submit application</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchCard\r\n","import React from 'react'\r\nimport { GlobalUserContext } from '../../App'\r\nimport algoliasearch from 'algoliasearch/lite'\r\nimport SearchCard from '../../components/searchCard/SearchCard';\r\n\r\nimport './satelliteTheme.css'\r\nimport './style.scss'\r\n\r\nimport {\r\n    InstantSearch,\r\n    Hits,\r\n    SearchBox,\r\n    RefinementList\r\n} from 'react-instantsearch-dom';\r\n\r\nconst searchClient = algoliasearch(\r\n    'ZH4AVLMDOX',\r\n    '486758ad5d6465627b652b3812ad5e0d'\r\n);\r\n\r\n\r\n\r\nfunction Hit(props) {\r\n    return (\r\n        <div className=\"hit\">\r\n            <SearchCard projectData={props.hit} />\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction ProjectSearch() {\r\n    let { globalUserData } = React.useContext(GlobalUserContext)\r\n\r\n    return (\r\n        <div>\r\n            <InstantSearch indexName=\"projects\" searchClient={searchClient}>\r\n                <div className=\"right-panel\">\r\n                    <div className=\"ais-SearchBox-input-wrapper\">\r\n                        <SearchBox autoFocus focusShortcuts={['/']} defaultRefinement={globalUserData.skills.join(', ')} />\r\n                    </div>\r\n\r\n                    <Hits  hitComponent={Hit} />\r\n                </div>\r\n            </InstantSearch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSearch\r\n","import React, { createContext, useState } from 'react';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\n\r\nimport './App.css';\r\n\r\nimport AppBar from './components/appBar/AppBar';\r\nimport HomePage from './pages/home/Home';\r\nimport CompleteSignupPage from './pages/completeSignup/CompleteSignup';\r\nimport Dashboard from './pages/dashboard/Dashboard';\r\nimport ProjectSearch from './pages/projectSearch/ProjectSearch';\r\n\r\nconst appTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      light: '#0068d6',\r\n      main: '#0068d6',\r\n      dark: '#0068d6',\r\n      contrastText: '#fff',\r\n    },\r\n    secondary: {\r\n      light: '#0068d6',\r\n      main: '#0068d6',\r\n      dark: '#0068d6',\r\n      contrastText: '#000',\r\n    },\r\n    // primary: {\r\n    //   light: '#007bff',\r\n    //   main: '#007bff',\r\n    //   dark: '#007bff',\r\n    //   contrastText: '#fff',\r\n    // },\r\n    // secondary: {\r\n    //   light: '#007bff',\r\n    //   main: '#007bff',\r\n    //   dark: '#007bff',\r\n    //   contrastText: '#000',\r\n    // },\r\n  },\r\n});\r\n\r\nexport const GlobalUserContext = createContext({\r\n});\r\n\r\nfunction App() {\r\n  let [globalUserData, setGlobalUserData] = useState({\r\n    username: '',\r\n    firebase_uid: '',\r\n    display_name: '',\r\n    display_picture: '',\r\n    phone_number: '',\r\n    email: '',\r\n    skills: [],\r\n    fcm_device_tokens: [],\r\n  })\r\n\r\n\r\n  return (\r\n    <GlobalUserContext.Provider value={{ globalUserData, setGlobalUserData }}>\r\n      <ThemeProvider theme={appTheme}>\r\n        <Router>\r\n          <div className=\"App\">\r\n            <div id=\"app-nav-container\">\r\n              <h1><AppBar /></h1>\r\n            </div>\r\n\r\n            <div id=\"app-page-container\">\r\n              <Switch>\r\n                <Route exact path=\"/\" component={HomePage} />\r\n                <Route exact path=\"/dashboard\" component={Dashboard} />\r\n                <Route exact path=\"/complete-signup\" component={CompleteSignupPage} />\r\n                <Route exact path=\"/dashboard\" component={Dashboard} />\r\n                <Route exact path=\"/search-projects\" component={ProjectSearch} />\r\n              </Switch>\r\n            </div>\r\n          </div>\r\n        </Router>\r\n      </ThemeProvider>\r\n    </GlobalUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.unregister();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}